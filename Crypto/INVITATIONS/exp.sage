# fix some problems
from Crypto.Util.number import long_to_bytes

def linearPaddingHastads(cArray,nArray,aArray,bArray,eArray,eps):
    
    if(len(cArray) == len(nArray) == len(aArray) == len(bArray) == len(eArray)):
        for i in range(4):
            cArray[i] = Integer(cArray[i])
            nArray[i] = Integer(nArray[i])
            aArray[i] = Integer(aArray[i])
            bArray[i] = Integer(bArray[i])
            eArray[i] = Integer(eArray[i])
        TArray = [-1]*4
        for i in range(4):
            arrayToCRT = [0]*4
            arrayToCRT[i] = 1
            TArray[i] = crt(arrayToCRT,nArray)
        P.<x> = PolynomialRing(Zmod(prod(nArray)))
        gArray = [-1]*4
        for i in range(4):
            gArray[i] = TArray[i]*(pow(aArray[i]*x**2 + bArray[i],eArray[i]) - cArray[i])
        g = sum(gArray)
        g = g.monic()
        roots = g.small_roots(epsilon=eps)
        if(len(roots)== 0):
            print("No Solutions found!")
            return -1
        return roots

    else:
        print("Input error!")

def LinearPadding():

    eArr = [3 for i in range(4)]

    nArr = [
 146694460234280339612721415368435987068740712812770728817136582256341063038147863645902264969297892447333024201649306207442798919845916187823646745721109151386096190207317810424580842120750075213595282979568495342617919336417068886973047979116994072272482630372638964064972815256237040541007947708358680368391,
 65031485534704406281490718325237831433086480239135617407356760819741796565231283220528137697949585150709734732370203390254643835828984376427852793969716489016520923272675090536677771074867975287284694860155903327351119710765174437247599498342292671117884858621418276613385329637307269711179183430246951756029, 
 126172075578367446151297289668746433680600889845504078949758568698284471307000358407453139846282095477016675769468273204536898117467559575203458221600341760844973676129445394999861380625435418853474246813202182316736885441120197888145039130477114127079444939102267586634051045795627433724810346460217871661901,
 75691424835079457343374072990750986689075078863640186724151061449621926239051140991748483370587430224317778303489124525034113533087612981452189061743589227565099659070008017454957304620495920813121234552401715857719372861565651204968408267740732475458128601061676264465241188491988485848198323410127587280471
 ] 
    cArr = [
    129274519334082165644106292383763271862424981496822335330342328217347928093592453953990448827969549377883054831490973006383371688359344675312001881631556371220779971357039899721241880304156884612458373310254854821837978876725801047977081900824202659636258168216028784656056334358157381820784576207338479493823,
    8140023566779187828652447593867705813386781164538611122714708931585587727699213769519135028841126072130625547328311301696554048174772606261707345115571968105138543476580875347239912760797035694220505996377127309341770427102697008350472060971360460756799310951343070384766137332401117333917901167639276168214,
    25434511525127530194830986592289179576070740435049947678930286998924519588985583799757299734846614343604661534391991096353170465467791358514448923161460366596251448937540153262731348684727026598527904328268639060306102090278287818149679940661579357649191023269947102746200467430583428889484549034314463114080,
    9435583236354598287661880148272717764447540972316605192855157484524753847806158586224733743434644389385148450722945845355791145016665856388503878165725148745517696840251674049929524448078129458846254866804153080766917319923905682824180976106679633180818527967145571143203594244851742143986040226240019541346
    ]
    aArr = [1 for i in range(4)]
    bArr = [i * 3 ** 431 for i in [3,8,10,11]]

    msg = linearPaddingHastads(cArr,nArr,aArr,bArr,eArr,eps=1/20)
    for i in msg:
        print(long_to_bytes(i))

if __name__ == '__main__':
    LinearPadding()
